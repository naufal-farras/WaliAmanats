
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1> 
        Jaminan
    </h1>
</section>
<section>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">

                <div class="box-header with-border">

                    <div class="col-md-6">
                        <div class="pull-left">
                            <a href="#" onclick="AddModalCore()" class="btn btn-success" data-toggle="modal" data-target="#ModalCore"><i class="fa fa-plus-circle"> Tambah</i></a>
                        </div>
                    </div>
                </div>

                <div class="box-body">
                    <table id="example1" class="table table-bordered table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Emiten</th>
                                <th>Jaminan</th>
                                <th>Nominal</th>
                                <th>Status</th>
                                <th>Aksi</th>
                            </tr>
                        </thead>
                        <tbody class="tbody"></tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
    <div class="modal fade" id="ModalCore" role="dialog" aria-labelledby="ModalCoreLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="ModalCoreLabel"></h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <fieldset>
                            <input type="hidden" id="Id" value="">
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Emiten</label>
                                <div class="col-sm-9" id="divEmiten">
                                    <input type="hidden" class="modalhide" id="EmitenHidden" value="0">
                                    <select required id="Emiten" data-placement="Choose" class="form-control select2" style="width: 70%" @*onchange="LoadProduk();"*@></select>
                                </div>
                             
                            </div>
                            @*<div class="form-group">
                                <label class="col-sm-3 control-label">Produk</label>
                                <div class="col-sm-9" id="divProduk">
                                    <input type="hidden" class="modalhide" id="ProdukHidden" value="0">
                                    <select required id="Produk" data-placement="Choose" readonly disabled class="form-control select2" style="width: 70%"></select>
                                </div>
                            </div>*@
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Jaminan</label>
                                <div class="col-sm-9" id="divProduk">
                                    <input type="hidden" class="modalhide" id="JaminanHidden" value="0">
                                    <select required id="Jaminan" data-placement="Choose" class="form-control select2" style="width: 70%"></select>
                                </div>
                                @*<div class="col-sm-9" id="divProduk2">
                                    <input type="hidden" class="modalhide" id="JaminanHidden" value="0">
                                    <select required id="Jaminan2" data-placement="Choose" class="form-control select2" style="width: 70%"></select>
                                </div>*@
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Nominal</label>
                                <div class="col-sm-9" id="divNominal">
                                    <input required type="text" name="Nominal"  id="Nominal" class="form-control number" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Persentase</label>
                                <div class="col-sm-3" id="divPersentase">
                                    <input required type="text" name="Persentase" placeholder="50%"  id="Persentase" class="form-control"/>

                                </div>
                               <div>
                                   <p class="m-2">*cukup inputkan nilainya tanpa "%"</p>

                               </div>

                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label">Tanggal Input</label>
                                <div class="col-sm-9" id="divTanggal">
                                    <input required type="date" name="Tanggal" id="Tanggal" style="width: 70%" class="form-control" />
                                </div>
                            </div>
                           
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="Add" onclick="Save()">Submit</button>
                    <button type="button" class="btn btn-info" id="Update"  onclick="Edit()">Update</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script>
        $(document).ready(function () {
            LoadEmiten();
            LoadJaminan();
            //// Setup - add a text input to each footer cell
            $('#example1 thead tr').clone(true).appendTo('#example1 thead');

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetFilter", "TransaksiRatings")",
                async: false,
            dataType: "JSON",
            success: function (result) {
                //console.log(result)
                $('#example1 thead tr:eq(1) th').each(function (i) {
                    if (i == 0 || i == 5) {
                        $(this).html('');
                    } else if (i == 1 || i == 2) {
                        var title = $(this).text();
                        var res = title.replace(" ", "").replace(" ", "").replace("-", "");
                        var data = eval("result." + res);
                        var html = '';
                        html += '<select class="form-control select2 filter">';
                        html += '<option value="" selected="selected">Search</option>';
                        //html += '<option selected="selected">Search ' + title + '</option>';
                        $.each(data, function (index, val) {
                            html += '<option>' + val + '</option>';
                        });
                        html += '</select>';
                        $(this).html(html);

                        $('select', this).on('keyup change', function () {
                            if ($("#example1").DataTable().column(i).search() !== this.value) {
                                //t.column(i).search(this.value).draw();
                                $("#example1").DataTable().column(i).search(this.value ? '^' + this.value + '$' : '', true, false).draw();
                            }
                        });


                    }
                    //else if (i == 7 || i == 8) {
                    //    var title = $(this).text();
                    //    $(this).html('<input type="date" class="form-control filter" placeholder="Search" />');
                    //    $('input', this).on('keyup change', function () {
                    //        var year = this.value.substr(0, 4);
                    //        var month = this.value.substr(5, 2);
                    //        var day = this.value.substr(8, 2);
                    //        var newdate = day + "/" + month + "/" + year;
                    //        if (t.column(i).search() !== newdate) {
                    //            t.column(i).search(newdate).draw();
                    //        }
                    //    });
                        //}
                    else {
                        var title = $(this).text();
                        $(this).html('<input type="text" class="form-control filter" placeholder="Search" />');
                        //$(this).html('<input type="text" class="form-control" placeholder="Search ' + title + '" />');

                        $('input', this).on('keyup change', function () {
                            if ($("#example1").DataTable().column(i).search() !== this.value) {
                                $("#example1").DataTable().column(i).search(this.value).draw();
                            }
                        });
                    }

                });
            }
        });

        var t = $("#example1").DataTable({
            "orderCellsTop": true,
            "ajax": {
                "url": "@Url.Action("GetAll", "TransaksiJaminans")",
            "type": "GET",
            "datatype": "json"
        },
            "columns": [
        { "data": null },
        { "data": "Perusahaan.Nama" },
        //{ "data": "TransaksiLaporan.Produk.Nama" },
        //{ "data": "TransaksiLaporan.NamaProduk" },
        { "data": "Jaminan.Nama" },
        {
            "render": function (data, type, val) {



                    return decimal(val.Nominal);


            }
        },


        {
            "render": function (data, type, val) {



                if (val.Status == true) {
                    return '<td class="text-center"><span class="label label-info">Done</span></td>';

                } else {
                    return '<td class="text-center"><span class="label label-warning">Unfinisihed</span></td>';
                }
            }
        },

        {
            "render": function (data, type, val) {

                html = '';

                if (val.Status == false) {
                html += ' <a  class="btn btn-sm btn-warning"  onclick="EditModal(' + val.Id + ')"><i class="fa fa-pencil"></i></a>';
                    return html += ' <a href="#" class="btn btn-sm btn-danger" onclick="Delete(' + val.Id + ')"><i class="fa fa-trash"></i></a>';
                    return html;
                } else {

                      html += ' <a href="#"  class="btn btn-sm btn-danger" onclick="Delete(' + val.Id + ')"><i class="fa fa-trash"></i></a>';
                      return html;
                }
            }
        }


        ],
                "pageLength": 10,
                "scrollX": true,
                "scrollCollapse": true,
                "dom": "<'row'<'col-sm-4'B><'col-sm-2'l><'col-sm-6'p>>" + "<'row'<'col-sm-12'tr>>" + "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "columnDefs": [
                    {

                        "visible": false,
                        "searchable": false
                    },
                    {
                        "searchPanes": {
                            "show": true,
                        },
                        "targets": [1, 2, 3, 4],
                    }, {
                        "searchPanes": {
                            "show": false,
                        },
                        "targets": [1, 2, 3, 4],
                    }, {
                        "sortable": false,
                        "class": "index",
                        "targets": [0, 5]
                    }, {
                        "width": 200,
                        "targets": 5

                    }],
                "searchPanes": {
                    "layout": 'columns-6'
                },
                "select": {
                    "style": 'multi'
                },
                "buttons": {
                    "buttons": [
                        {
                            "text": '<i class="fa fa-file-excel-o"></i> Download',
                            "extend": 'excelHtml5',
                            "className": 'btn-success',
                            "autoFilter": false,
                            "sheetName": 'Data',
                            "title": "Report Data Jaminan",
                            "exportOptions": {
                                "columns": [1, 2, 3, 4]
                            }

                        },
                        {
                            "extend": 'searchPanes',
                            "config": {
                                "cascadePanes": true
                            },
                            "className": 'btn-info'
                        },
                        {
                            "text": '<i class="fa fa-refresh"></i> Reset',
                            "className": 'btn-warning',
                            "action": function (e, dt, node, config) {
                                $('.filter').each(function () {
                                    $(this).val('').change();
                                })

                                //// Redraw table (and reset main search filter)
                                $("#example1").DataTable().search('').draw();
                                $("#example1").DataTable().column(7).search('').draw();


                            },
                        }
                    ],
                    "dom": {
                        "button": {
                            "className": 'btn btn-sm'
                        },
                        "buttonLiner": {
                            "tag": null
                        }
                    }
                },
                "language": {
                    "searchPanes": {
                        "clearMessage": 'Clear',
                        "collapse": { 0: '<i class="fa fa-search"></i> Search', _: '<i class="fa fa-search"></i> Search (%d)' }
                    }
                }

        });

        t.on('order.dt search.dt', function () {
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
        });
        function AddModalCore() {
            ClearError();
            ClearCore();
            $('#Update').hide();
            $('#Add').show();

            $('#ModalCoreLabel').html('Tambah Jaminan');
        }
        function ClearError() {
            $(".has-error").removeClass("has-error");
        }
        function ClearCore() {
            $("#Id").val('');
            $("#Emiten").val('').trigger('change');
         //   $("#Produk").val('').trigger('change');
            $("#Nominal").val('');
            $("#Persentase").val('');
            $("#Jaminan").val('').trigger('change');
            $("#Tanggal").val('');
            $("#Update").hide();
            $("#Add").show();
            var x = document.getElementsByClassName("modalhide");
            for (var i = 0; i < x.length; i++) {
                x[i].value = 0;
            }
        }
        $(document).on("keyup", ".number", (function (event) {

            // skip for arrow keys
            if (event.which >= 37 && event.which <= 40) return;

            // format number
            $(this).val(function (index, value) {
                return value
                .replace(/\D/g, "")
                .replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                ;
            });
        }));
        function LoadEmiten() {
            var kate = $('#EmitenHidden').val();
            $.ajax({
                url: "@Url.Action("GetPerusahaan", "TransaksiRatings")",
                type: 'GET',
            dataType: 'json',
            success: function (result) {
                var kategori = $("#Emiten");
                kategori.html('');
                $("<option></option>").val('').text('Pilih Emiten').appendTo(kategori);
                $.each(result, function (i, value) {
                    $("<option></option>").val(value.Id).text(value.Nama).appendTo(kategori);
                    //console.log(value.Nama);
                });
                if (kate != 0) {
                    $("#Emiten").val(kate).trigger('change');
                    //LoadNasabah();
                }
            }
        });
        }
        function LoadProduk() {
            var Kate = $('#Emiten').val();
            var nasa = $('#ProdukHidden').val();
            $.ajax({
                url: "@Url.Action("GetProduk","TransaksiRatings")",
                type: 'GET',
            data: { 'EmitenId': Kate },
            dataType: 'JSON',
            success: function (result) {
                var Nasabah = $("#Produk");
                Nasabah.removeAttr("readonly");
                Nasabah.removeAttr("disabled");
                Nasabah.html('');
                $("<option></option>").val('').text('Pilih Produk').appendTo(Nasabah);
                $.each(result, function (i, value) {
                    $("<option></option>").val(value.Id).text(value.NamaProduk).appendTo(Nasabah);
                });
                if (nasa != 0) {
                    $("#Produk").val(nasa).trigger('change');

                }
            }
        });
        }
        function LoadJaminan() {
            var kate = $('#JaminanHidden').val();
            $.ajax({
                url: "@Url.Action("GetJaminan", "TransaksiJaminans")",
                type: 'GET',
            dataType: 'json',
            success: function (result) {
                var kategori = $("#Jaminan");
                kategori.html('');
                $("<option></option>").val('').text('Pilih Jaminan').appendTo(kategori);
                $.each(result, function (i, value) {
                    $("<option></option>").val(value.Id).text(value.Nama).appendTo(kategori);
                    //console.log(value.Nama);
                });
                if (kate != 0) {
                    $("#Jaminan").val(kate).trigger('change');
                    //LoadNasabah();
                }
            }
        });
        }

        function Save() {
            if ($.trim($("#Emiten").val()) == "") { $("#divEmiten").addClass("has-error"); return; }
            if ($.trim($("#Tanggal").val()) == "") { $("#divTanggal").addClass("has-error"); return; }
            if ($.trim($("#Jaminan").val()) == "") { $("#divJaminan").addClass("has-error"); return; }
            if ($.trim($("#Nominal").val()) == "") { $("#divNominal").addClass("has-error"); return; }
            if ($.trim($("#Persentase").val()) == "") { $("#divPersentase").addClass("has-error"); return; }
            //  if ($.trim($("#Keterangan").val()) == "") { $("#divKeterangan").addClass("has-error"); return; }
            //var TanggalInput = $("#Tanggal").val();
            //if ($.trim($("#Tanggal").val()) == "") { TanggalInput = new Date(); }
            var jaminan = new Object();
            jaminan = {
                Id: $("#Id").val(),
                Perusahaan_Id: $("#Emiten").val(),
                Jaminan_Id: $("#Jaminan").val(),
                Nominal: minkoma($("#Nominal").val()),
                Persentase: $("#Persentase").val(),
                TanggalInput: $("#Tanggal").val()
                //     Matching_Id: $("#Keterangan").val()
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("Save", "TransaksiJaminans")",
                data: { 'jaminan': jaminan },
            success: function (result) {
                $('#ModalCore').hide();

                swal({
                    position: 'center',
                    type: 'success',
                    title: 'Insert Successfully',
                    showCancelButton: false,
                    showConfirmButton: false,
                    timer: 1000,
                },
                  function () {
                      window.location.reload();
                  });
            },
            error: function (response) {
                swal('Error', 'Insert Fail', 'error');
                //ClearScreen();
            }
        });

        }

        function EditModal(Id) {
            //ClearError();
            //ClearCore();
            debugger;
            $('#Add').hide();
            $('#Update').show();

            //if ($.trim($("#Emiten").val()) == "") { $("#divEmiten").addClass("has-error"); return; }
            //if ($.trim($("#Tanggal").val()) == "") { $("#divTanggal").addClass("has-error"); return; }
            //if ($.trim($("#Jaminan").val()) == "") { $("#divJaminan").addClass("has-error"); return; }
            //if ($.trim($("#Nominal").val()) == "") { $("#divNominal").addClass("has-error"); return; }
            //if ($.trim($("#Persentase").val()) == "") { $("#divPersentase").addClass("has-error"); return; }
            //  if ($.trim($("#Keterangan").val()) == "") { $("#divKeterangan").addClass("has-error"); return; }
            //var TanggalInput = $("#Tanggal").val();
            //if ($.trim($("#Tanggal").val()) == "") { TanggalInput = new Date(); }
        
                $.ajax({
                    url: "@Url.Action("GetPerusahaan", "TransaksiJaminans")",
                    type: "GET",
            data: { 'Id': Id },
            dataType: "json",
            success: function (result) {
                console.log(result);
               
                $("#Id").val(result.Id),
                $("#Emiten").val(result.Perusahaan.Id).trigger('change');    
                $("#Jaminan").val(result.Jaminan.Id).trigger('change');

                $("#Nominal").val(result.Nominal),
                $("#Persentase").val(result.Persentase),
        
                $("#Tanggal").val(formatDate(result.TanggalInput)).trigger('change');
                

            }
           
            });
            $('#ModalCore').modal('show');
            $('#ModalCoreLabel').html('Ubah Jaminan');
        }
        function Edit()
        {
            debugger;
          
            var jaminan = new Object();

            jaminan = {
                Id: $("#Id").val(),
                Perusahaan_Id: $("#Emiten").val(),
                Jaminan_Id: $("#Jaminan").val(),
                Nominal: minkoma($("#Nominal").val()),
                Persentase: $("#Persentase").val(),
                TanggalInput: $("#Tanggal").val()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("Edit", "TransaksiJaminans")",
                data: { 'jaminan': jaminan },
            success: function (result) {
                $('#ModalCore').hide();

                swal({
                    position: 'center',
                    type: 'success',
                    title: 'Updated Successfully',
                    showCancelButton: false,
                    showConfirmButton: false,
                    timer: 1000,
                },
                  function () {
                      window.location.reload();
                  });
            },
            error: function (response) {
                swal('Error', 'Updated Fail', 'error');
                //ClearScreen();
            }
        });
        }
        function Delete(Id) {
            swal({
                title: "Are you sure to delete this?",
                text: "You will not be able to recover this imaginary data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    url: "@Url.Action("Delete", "TransaksiJaminans")",
                    type: "POST",
                data: { 'Id': Id },
                success: function (response) {
                    swal({
                        title: "Deleted!",
                        text: "That data has been delete!",
                        type: "success"
                    },
                    function () {
                        window.location.href = '@Url.Action("Index", "TransaksiJaminans")';
                    });
                },
                error: function (response) {
                    swal("Oops", "We couldn't connect to the server!", "error");
                }
            });
        });
        }
        function minkoma(angka) {
            var bil = angka;
            var loop = Math.floor(angka.length / 3);
            for (var i = 0; i < loop; i++) {
                bil = bil.replace(',', '');
            }
            return bil;
        }

        function pluskoma(angka) {
            var rupiah = '';
            var angkarev = angka.toString().split('').reverse().join('');
            for (var i = 0; i < angkarev.length; i++) if (i % 3 == 0) rupiah += angkarev.substr(i, 3) + ',';
            return rupiah.split('', rupiah.length - 1).reverse().join('');
        }
        function decimal(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }
        function decimal2(num2) {
            return num2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",").split(".")
        }
        function formatDate(dates) {
            date = new Date(parseInt(dates.substr(6)));
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;
            //return day + '/' + month + '/' + year;
            return year + '-' + month + '-' + day;
        }

        function formatDates(dates) {
            date = new Date(parseInt(dates.substr(6)));
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;
            return day + '/' + month + '/' + year;
        }
    </script>
}