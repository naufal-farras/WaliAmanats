
@{
    ViewBag.Title = "CetakJaminan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Cetak Jaminan
    </h1>
</section>
<section>
    <div class="row">
        <div class="col-xs-12">
            <div class="box"> 


                <div class="box-body">
                    <table id="example1" class="table table-bordered table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Emiten</th>
                                
                                <th>Jaminan</th>
                                <th>Nominal</th>
                                
                                <th>Tanggal Surat</th>
                                <th>Tanggal Cetak</th>
                                <th>StatusCetak</th>
                                <th>Aksi</th>
                            </tr>
                        </thead>
                        <tbody class="tbody"></tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script>
         $(document).ready(function () {
            //LoadEmiten();
            //LoadJaminan();
            //// Setup - add a text input to each footer cell
            $('#example1 thead tr').clone(true).appendTo('#example1 thead');

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetFilter", "TransaksiRatings")",
                async: false,
            dataType: "JSON",
            success: function (result) {
                console.log(result)
                $('#example1 thead tr:eq(1) th').each(function (i) {
                    if (i == 0 || i == 7) {
                        $(this).html('');
                    } else if (i == 1 || i == 2) {
                        var title = $(this).text();
                        var res = title.replace(" ", "").replace(" ", "").replace("-", "");
                        var data = eval("result." + res);
                        var html = '';
                        html += '<select class="form-control select2 filter">';
                        html += '<option value="" selected="selected">Search</option>';
                        //html += '<option selected="selected">Search ' + title + '</option>';
                        $.each(data, function (index, val) {
                            html += '<option>' + val + '</option>';
                        });
                        html += '</select>';
                        $(this).html(html);

                        $('select', this).on('keyup change', function () {
                            if ($("#example1").DataTable().column(i).search() !== this.value) {
                                //t.column(i).search(this.value).draw();
                                $("#example1").DataTable().column(i).search(this.value ? '^' + this.value + '$' : '', true, false).draw();
                            }
                        });


                    }
                    else if (i == 4 || i == 5) {
                        var title = $(this).text();
                        $(this).html('<input type="date" class="form-control filter" placeholder="Search" />');
                        $('input', this).on('keyup change', function () {
                            var year = this.value.substr(0, 4);
                            var month = this.value.substr(5, 2);
                            var day = this.value.substr(8, 2);
                            var newdate = day + "/" + month + "/" + year;
                            if (t.column(i).search() !== newdate) {
                                t.column(i).search(newdate).draw();
                            }
                        });
                        }
                    else {
                        var title = $(this).text();
                        $(this).html('<input type="text" class="form-control filter" placeholder="Search" />');
                        //$(this).html('<input type="text" class="form-control" placeholder="Search ' + title + '" />');

                        $('input', this).on('keyup change', function () {
                            if ($("#example1").DataTable().column(i).search() !== this.value) {
                                $("#example1").DataTable().column(i).search(this.value).draw();
                            }
                        });
                    }

                });
            }
        });

        var t = $("#example1").DataTable({
            "orderCellsTop": true,
            "ajax": {
                "url": "@Url.Action("GetCetakJaminanAll", "TransaksiJaminans")",
            "type": "GET",
            "datatype": "json"
        },
            "columns": [
        { "data": null },
        { "data": "Perusahaan.Nama" },

        { "data": "Jaminan.Nama" },
        {
            "render": function (data, type, val) {



                return decimal(val.Nominal);


            }
        },

 
        //{
        //    "render": function (data, type, val) {



        //        if (val.Status == true) {
        //            return '<td class="text-center"><span class="label label-info">Done</span></td>';

        //        } else {
        //            return '<td class="text-center"><span class="label label-warning">Unfinisihed</span></td>';
        //        }
        //    }
        //},
        {
                 "render": function (data, type, val) {
                     return formatDates(val.TanggalInput);
                 }
        },
         {
             "render": function (data, type, val) {
                 return formatDates(val.TanggalCetak);
             }
         },
          {
              "render": function (data, type, row) {
                  //var now = row.TanggalCetak;
                 

                  //if (cetak <= now && now <= bunga) {
                  //    return "<span class='label label-primary'>Perlu Dicetak</span>";
                  //} else {
                      return "<span class='label label-" + row.StatusCetak.Warna + "'>" + row.StatusCetak.Nama + "</span>";
                 // }
              }
          },
        {
            "render": function (data, type, val) {

                //return "<a class='btn btn-info btn-sm' href='@Url.Action("ViewJaminan", "TransaksiJaminans")/" + val.Id + "'><i class='fa fa-eye'></i></a> &nbsp;"
                return "<a class='btn btn-info btn-sm' href='@Url.Action("ViewJaminan","TransaksiJaminans")/" + val.Id + "'><i class='fa fa-eye'></i></a> &nbsp;"
            }
        }


        ],
                "pageLength": 10,
                "scrollX": true,
                "scrollCollapse": true,
                "dom": "<'row'<'col-sm-4'B><'col-sm-2'l><'col-sm-6'p>>" + "<'row'<'col-sm-12'tr>>" + "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "columnDefs": [
                    {

                        "visible": false,
                        "searchable": false
                    },
                    {
                        "searchPanes": {
                            "show": true,
                        },
                        "targets": [1, 2, 3, 4,5,6],
                    }, {
                        "searchPanes": {
                            "show": false,
                        },
                        "targets": [1, 2, 3, 4,5,6],
                    }, {
                        "sortable": false,
                        "class": "index",
                        "targets": [0, 7]
                    }, {
                        "width": 200,
                        "targets": 7

                    }],
                "searchPanes": {
                    "layout": 'columns-6'
                },
                "select": {
                    "style": 'multi'
                },
                "buttons": {
                    "buttons": [
                        {
                            "text": '<i class="fa fa-file-excel-o"></i> Download',
                            "extend": 'excelHtml5',
                            "className": 'btn-success',
                            "autoFilter": false,
                            "sheetName": 'Data',
                            "title": "Report Data Jaminan",
                            "exportOptions": {
                                "columns": [1, 2, 3, 4]
                            }

                        },
                        {
                            "extend": 'searchPanes',
                            "config": {
                                "cascadePanes": true
                            },
                            "className": 'btn-info'
                        },
                        {
                            "text": '<i class="fa fa-refresh"></i> Reset',
                            "className": 'btn-warning',
                            "action": function (e, dt, node, config) {
                                $('.filter').each(function () {
                                    $(this).val('').change();
                                })

                                //// Redraw table (and reset main search filter)
                                $("#example1").DataTable().search('').draw();
                                $("#example1").DataTable().column(7).search('').draw();


                            },
                        }
                    ],
                    "dom": {
                        "button": {
                            "className": 'btn btn-sm'
                        },
                        "buttonLiner": {
                            "tag": null
                        }
                    }
                },
                "language": {
                    "searchPanes": {
                        "clearMessage": 'Clear',
                        "collapse": { 0: '<i class="fa fa-search"></i> Search', _: '<i class="fa fa-search"></i> Search (%d)' }
                    }
                }

        });

        t.on('order.dt search.dt', function () {
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
         });
        function decimal(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }
        function decimal2(num2) {
            return num2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",").split(".")
        }
        function formatDate(dates) {
            date = new Date(parseInt(dates.substr(6)));
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;
            //return day + '/' + month + '/' + year;
            return year + '-' + month + '-' + day;
        }
        function formatDates(dates) {
            date = new Date(parseInt(dates.substr(6)));
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;
            return day + '/' + month + '/' + year;
        }
    </script>
}
